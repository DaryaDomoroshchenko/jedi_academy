@mixin button-color($text-color, $bg-color, $border-color) {
  color: $text-color;
  background-color: $bg-color;
  border: solid 2px $border-color;

  &:hover {
    background-color: $color-neitral;
    box-shadow: 0 0 8px $bg-color;
  }

  &:active {
    background-color: $color-neitral;
    box-shadow: 0 0 20px $bg-color;

    @media (max-width: $screen-m) {
      box-shadow: 0 0 8px $bg-color;
    }
  }
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin grid($width, $gap) {
  display: grid;
  grid-template-columns: repeat(auto-fill, #{$width});
  grid-gap: #{$gap};
  justify-content: center;
}

@mixin border-style {
  position: absolute;
  top: 100%;
  height: 4px;
  background: $color-secondary;
  content: '';
}

@mixin border-width($width) {
  width: calc((100% - #{$width}) / 2);
}

@mixin header-height($height) {
  height: calc(100vh - #{$height});
}

@mixin media-l {
  @media screen and (max-width: #{$screen-l}) {
    @content;
  }
}

@mixin media-m {
  @media screen and (max-width: #{$screen-m}) {
    @content;
  }
}

@mixin media-s {
  @media screen and (max-width: #{$screen-s}) {
    @content;
  }
}

@mixin media-xs {
  @media screen and (max-width: #{$screen-xs}) {
    @content;
  }
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

